service core-api {
	// user login
	@handler UserLoginHandler
	post /user/login (LoginRequest) returns (LoginResponse)
	// user detail
	@handler UserDetail
	get /user/detail (UserDetailRequest) returns (UserDetailResponse)
	// send email code
	@handler SendEmailCodeRegister
	post /email/code/send/register (SendEmailCodeRequest) returns (SendEmailResponse)
	// user register
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterResponse)
}

@server (
	middleware: Auth
)
service core-api {
	// upload file
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadResponse)
	// user associated strorage
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveResponse)
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type SendEmailCodeRequest {
	Email string `json:"email"`
}

type SendEmailResponse {
	Message string `json:"message"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse {
	Message string `json:"message"`
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveResponse {
	Identity string `json:"identity"`
}