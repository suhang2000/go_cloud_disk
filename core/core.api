service core-api {
	// user login
	@handler UserLoginHandler
	post /user/login (LoginRequest) returns (LoginResponse)
	// user detail
	@handler UserDetail
	get /user/detail (UserDetailRequest) returns (UserDetailResponse)
	// send email code
	@handler SendEmailCodeRegister
	post /email/code/send/register (SendEmailCodeRequest) returns (SendEmailResponse)
	// user register
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterResponse)
}

@server (
	middleware: Auth
)
service core-api {
	// upload file
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadResponse)
	// user associated strorage
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveResponse)
	// user file list
	@handler UserFileListHandler
	get /user/file/list (UserFileListRequest) returns (UserFileListResponse)
	// user file name update
	@handler UserFileNameUpdateHandler
	post /user/file/name/update (UserFileNameUpdateRequest) returns (UserFileNameUpdateResponse)
	// create user folder
	@handler UserFolderCreateHandler
	post /user/folder/create (UserFolderCreateRequest) returns (UserFolderCreateResponse)
	// user file delete
	@handler UserFileDeleteHandler
	delete /user/file/delete (UserFileDeleteRequest) returns (UserFileDeleteResponse)
	// user file move
	@handler UserFileMoveHandler
	post /user/file/move (UserFileMoveRequest) returns (UserFileMoveResponse)
	
	// share basic create
	@handler ShareBasicCreateHandler
	post /share/basic/create (ShareBasicCreateRequest) returns (ShareBasicCreateResponse)
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type SendEmailCodeRequest {
	Email string `json:"email"`
}

type SendEmailResponse {
	Message string `json:"message"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse {
	Message string `json:"message"`
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveResponse {
	Identity string `json:"identity"`
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListResponse {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateResponse {
	Message string `json:"message"`
}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateResponse {
	Indentity string `json:"indentity"`
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteResponse {
	Message string `json:"message"`
}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type UserFileMoveResponse {
	Message string `json:"message"`
}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
}

type ShareBasicCreateResponse {
	Identity string `json:"identity"`
}